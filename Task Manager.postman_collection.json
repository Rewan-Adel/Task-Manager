{
	"info": {
		"_postman_id": "98b18ca9-cdc6-45ba-9cec-2e4382503210",
		"name": "Task Manager",
		"description": "# ðŸŽ¯Task Manager API\n\nThis is a simple Task Management API built with Node.js, Express, and MongoDB. The API allows users to manage tasks with basic functionalities like creating, updating, deleting, and retrieving tasks.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25350743"
	},
	"item": [
		{
			"name": "User Auth",
			"item": [
				{
					"name": "Signup",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"\",\r\n    \"email\": \"\",\r\n    \"password\":\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/auth/signup",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"\",\r\n    \"password\":\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Task Management",
			"item": [
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"\",\r\n    \"description\":\"\", //opitional\r\n    \"status\":\"\" //defualt is incomplete\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/task/create",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    //\"title\":\"\"\r\n  //  \"description\":\"\", \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/task/update/:taskID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"update",
								":taskID"
							],
							"variable": [
								{
									"key": "taskID",
									"value": "672c9f136b81ddecacb033f0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/task/get/one/:taskID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"get",
								"one",
								":taskID"
							],
							"variable": [
								{
									"key": "taskID",
									"value": "672c9f0f6b81ddecacb033ed"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/task/get/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"get",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete  One Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/task/delete/one/:taskID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"delete",
								"one",
								":taskID"
							],
							"variable": [
								{
									"key": "taskID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Tasks",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/task/delete/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"delete",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter By Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/task/filter/:status",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"filter",
								":status"
							],
							"variable": [
								{
									"key": "status",
									"value": "incomplete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark as Complete",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/task/mark/complete/:taskID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"mark",
								"complete",
								":taskID"
							],
							"variable": [
								{
									"key": "taskID",
									"value": "672c9f0f6b81ddecacb033ed"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark as Incomplete",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/task/mark/incomplete/:taskID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"task",
								"mark",
								"incomplete",
								":taskID"
							],
							"variable": [
								{
									"key": "taskID",
									"value": "672c9f0f6b81ddecacb033ed"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark Task",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Get data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Post data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		},
		{
			"key": "URL",
			"value": "http://localhost:8800",
			"type": "default"
		}
	]
}